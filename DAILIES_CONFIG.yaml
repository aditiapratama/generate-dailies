globals:
  ###############################################
  ## Color
  ###############################################

  # Path to the ocio config to use
  ocioconfig: /opt/ocio/aces/config.ocio
  # ocio display transform
  ociodisplay: ACES
  # ocio view transform 
  ocioview: RRT

  # Not implemented yet
  ociocolorconvert: 
  ociolook: 

  ###############################################
  ## Reformatting and Cropping
  ###############################################
  # If debug is true, no encoding will be done and there will be debug prints 
  debug: true
  # Number of pixels to crop from width and height before resizing to dailies res. 
  # You can enter an int pixel number, or a percentage like  5% or 6.25%
  cropwidth:
  cropheight: 
  # width and height are the resolution to reformat to. 
  width: 1920
  height: 1080
  # If fit=no, height will be ignored and the aspect ratio of the input will be preserved.
  fit: true

  # Enable an oiio pixel filter to use for scaling. Default is good: blackman-harris for scaling up, lanczos3 for scaling down.
  # 
  # Possible filters: https://github.com/OpenImageIO/oiio/blob/master/src/libutil/filter.cpp
  #     // name              dim width fixedwidth scalable separable
  #     { "box",             1,   1,    false,    true,     true },
  #     { "triangle",        1,   2,    false,    true,     true },
  #     { "gaussian",        1,   3,    false,    true,     true },
  #     { "sharp-gaussian",  1,   2,    false,    true,     true },
  #     { "catmull-rom",     1,   4,    false,    true,     true },
  #     { "blackman-harris", 1,   3,    false,    true,     true },
  #     { "sinc",            1,   4,    false,    true,     true },
  #     { "lanczos3",        1,   6,    false,    true,     true },
  #     { "mitchell",        1,   4,    false,    true,     true },
  #     { "bspline",         1,   4,    false,    true,     true },
  #     { "cubic",           1,   4,    false,    true,     true },
  #     { "keys",            1,   4,    false,    true,     true },
  #     { "simon",           1,   4,    false,    true,     true },
  #     { "rifman",          1,   4,    false,    true,     true }
  filter:

  # Output framerate. film=24, hdtv=23.98 = 24000/1001, pal=25, ntsc=30000/1001
  framerate: 24
  
  # specify a default video filter string to use in ffmpeg.
  # https://trac.ffmpeg.org/wiki/Scaling
  # https://ffmpeg.org/ffmpeg-scaler.html
  # Example: "lut3d=${lut},scale=w=${width}:h=${height}:force_original_aspect_ratio=1,pad=${width}:${height}:(ow-iw)/2:(oh-ih)/2"
  vf: 
  # Choose which output profile to use by default. See options below.
  output_codec: h264_hq
  # Movie location is a relative or absolute path for where to place the daily movie
  # For example ../ will place it in the directory above the frames. /place/output will place it here.
  movie_location: ../
  movie_ext: mov
  # If true, appends "_<codec name>" to the movie file
  movie_append_codec: true




###############################################
## Dailies Overlay Profiles
###############################################


# Dailies overlay profiles to use for different purposes. Each profile allows you to specify an overlay behavior.
profiles:
  # Internal Daily: overlays for frame counter, artist, comment, date, etc
  internal:
    # Grid_size is for specifying positioning. It splits the image into X by X boxes and you can use them to position the text
    grid_size: 6
    font: /mnt/cave/dev/__pipeline-tools/generate_dailies/generate-dailies/fonts/Roboto_Mono/RobotoMono-Light.ttf
    # Specify default font size in percentage of frame width. E.g. a value of 1.0 in a 1920x1080 image would be 19.6px 
    # small = 0.4, medium = 0.8, big = 1.3
    font_size: 48
    # left, right, center
    font_align_x:
    # baseline, top, bottom, center 
    font_align_y:
    # Specify default font color [R,G,B,A] 
    font_color: [0.8, 0.8, 0.8, 1.0]
    dropshadow: false
    
    # Enable an overlay to crop the pixels to a specific aspect ratio. 
    # For example to do a hard crop to 2.35 set the cropmask-ar to 2.35 and the crop mask opacity to 1.0
    cropmask:
      enable: true
      aspect: 2.35
      opacity: 0.5
    text_elements:
      # Text overlay to display current frame.
      framecounter:
        enable: true
        position: [1676, 1108]
        dropshadow: false
        font: /mnt/cave/dev/__pipeline-tools/generate_dailies/generate-dailies/fonts/Roboto_Mono/RobotoMono-Light.ttf
        font_size: 48
        font_color: [0.8, 0.8, 0.8, 1.0]
        # Number of digits to pad
        padding: 5
      datetime:
        enable: true
        position: [1, 4]
        dropshadow: false
        font:
        font_size: 2
        font_color: [0.8, 0.1, 0.1, 0.1]
        # Specify the datetime format. For example "%Y-%m-%dT%H:%M:%S" is ISO 8601 standard date format
        # https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behavior
        datetime_format: "%Y-%m-%dT%H:%M:%S"
      comment:
        enable: true
        position: [2, 2]
        dropshadow: false
        font:
        font_size: 3
        font_color: [0.1, 0.8, 0.8, 0.5]

      artist:
        enable: true
        position: [2, 2]
        dropshadow: false
        font:
        font_size: 3
        font_color: [0.1, 0.8, 0.8, 0.5]


  # Delivery profile - minimal overlays with cropmask and slate. 
  delivery:
    cropmask:
    framecounter:
    slate:

# Output profile definitions.
output_codecs:
  h264_hq:
    name: h264_hq
    overlay: internal_daily
    width:
    height:
    fit:
    framerate:
    codec: libx264
    profile: high444
    qscale:
    preset: slower
    keyint: 1
    bframes: 0
    tune: film
    crf: 13
    pix_fmt: yuv444p10le
    vf: colormatrix=bt601:bt709
    bitdepth: 10
    vendor:
    metadata_s:
    bitrate:
  h264_lq:
    name: h264_lq
    overlay: internal_daily
    width:
    height:
    fit:
    framerate:
    codec: libx264
    profile: high
    qscale:
    preset: slower
    keyint: 1
    bframes: 0
    tune: film
    crf: 17
    pix_fmt: yuv420p
    vf: colormatrix=bt601:bt709
    bitdepth: 8
    vendor:
    metadata_s:
    bitrate:
    movie_ext: mp4
  prores_4444:
    name: prores_4444
    overlay: delivery
    width:
    height:
    fit:
    framerate:
    codec: prores_ks
    profile: 4
    qscale: 7
    preset: 
    keyint: 
    bframes:
    tune: 
    crf:
    pix_fmt: yuva444p10le
    vf: colormatrix=bt601:bt709
    bitdepth: 10
    vendor: ap10
    metadata_s: encoder="Apple ProRes 4444"
    bitrate:
  prores_422hq:
    name: prores_422hq
    overlay: delivery
    width:
    height:
    fit:
    framerate:
    codec: prores_ks
    profile: 3
    qscale: 7
    preset: 
    keyint: 
    bframes:
    tune: 
    crf:
    pix_fmt: yuva444p10le
    vf: colormatrix=bt601:bt709
    bitdepth: 10
    vendor: ap10
    metadata_s: encoder="Apple ProRes 422 HQ"
    bitrate:
  prores_422:
    overlay: delivery
  dnxhd_36:
    overlay: delivery
  dnxhd_175:
    # http://forum.selur.de/topic1348-dnxhr-encoding.html
    # 1920x1080p  175 10  24000/1001
    name: dnxhd_175
    overlay: delivery
    width: 1920
    height: 1080
    fit: yes
    framerate: 24000/1001
    codec: dnxhd
    profile: dnxhd
    qscale:
    preset: 
    keyint:
    bframes:
    tune:
    crf:
    pix_fmt: yuva422p10le
    vf: colormatrix=bt601:bt709
    bitdepth: 10
    vendor:
    metadata_s:
    bitrate: 175M
  dnxhr_hqx:
    # https://askubuntu.com/questions/907398/how-to-convert-a-video-with-ffmpeg-into-the-dnxhd-dnxhr-format
    # dnxhd, dnxhr_444, dnxhr_hqx, dnxhr_hq, dnxhr_sq, dnxhr_lb
    # 12 bit 4:2:2
    name: dnxhr_hqx
    width:
    height:
    fit:
    framerate:
    codec: dnxhd
    profile: dnxhr_hqx
    qscale:
    preset: 
    keyint: 
    bframes:
    tune: 
    crf:
    pix_fmt: yuv422p12le
    vf: colormatrix=bt601:bt709
    bitdepth: 12
    vendor:
    metadata_s:
    bitrate: 175M
  mjpeg:
  # Special codec to concatenate input images into a quicktime container, for example if you want to 
  # turn a jpeg sequence into a photo jpeg quicktime
  concat:
    name: concat
    overlay: internal_daily
    width:
    height:
    fit:
    framerate:
    codec: copy
    profile:
    qscale:
    preset: 
    keyint: 
    bframes:
    tune: 
    crf:
    pix_fmt:
    vf:
    bitdepth:
    vendor:
    metadata_s:
    bitrate:

input_codecs:
  # Default - assumes an exr floating point input image
  imgseq_float:

